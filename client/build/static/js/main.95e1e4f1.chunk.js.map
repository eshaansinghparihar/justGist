{"version":3,"sources":["components/NewsCards.js","App.js","reportWebVitals.js","index.js"],"names":["News","data","error","newsRenderer","map","newsElem","Date","publishedAt","className","urlToImage","src","title","author","description","source","name","href","url","target","rel","length","undefined","App","useState","news","setNews","setError","useEffect","fetch","then","res","json","status","articles","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA4BeA,MA1Bf,YAA4B,IAAbC,EAAY,EAAZA,KAAKC,EAAO,EAAPA,MACZC,EAAaF,EAAKG,KAAI,SAACC,GAER,IAAIC,KAAKD,EAASE,aAC7B,OACE,sBAAKC,UAAU,YAAf,UACIH,EAASI,WAAY,qBAAKC,IAAKL,EAASI,WAAYD,UAAU,UAAe,qBAAKA,UAAU,UAC9F,sBAAKA,UAAU,WAAf,UACA,mBAAGA,UAAU,eAAb,SAA6BH,EAASM,QACpCN,EAASO,QAAW,oBAAGJ,UAAU,cAAb,wBAAsC,4BAAIH,EAASO,YACzE,mBAAGJ,UAAU,mBAAb,SAAiCH,EAASQ,cACxCR,EAASS,OAAOC,MAAS,oBAAGP,UAAU,cAAb,0BAAwC,mBAAGQ,KAAMX,EAASY,IAAKC,OAAO,SAASC,IAAI,aAA3C,SAAwD,4BAAId,EAASS,OAAOC,iBANjHV,EAASM,UAWnD,OACE,8BACET,EAAQ,8BAAMA,IAA8B,IAAdD,EAAKmB,aAAqBC,IAAPpB,EACjD,8BACCE,IACQ,6CCnBF,SAASmB,IACtB,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,mBAAS,IAA/C,mBACA,GADA,UACgDA,mBAAS,KAAzD,mBACA,GADA,UACkCA,mBAAS,KAA3C,mBACA,GADA,UACoCA,mBAAS,KAA7C,mBACA,GADA,UACkCA,mBAAS,KAA3C,mBACA,GADA,UAC0CA,mBAAS,KAAnD,mBACA,GADA,UACuBA,mBAAS,KAAhC,mBAAOrB,EAAP,KAAawB,EAAb,KAoBA,OAJAC,qBAAU,WAbJC,MAAM,SACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACY,OAAbA,EAAIE,OAEPP,EAAQK,EAAIG,UAIZP,EAASI,EAAII,cAMnB,IAGF,gCACA,sCACA,cAAC,EAAD,CAAWjC,KAAMuB,EAAMtB,MAAOA,OCnChC,IAYeiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.95e1e4f1.chunk.js","sourcesContent":["import React from 'react';\nimport './NewsCards.css';\nfunction News({data,error}){\n  const newsRenderer=data.map((newsElem)=>\n            {\n            let date = new Date(newsElem.publishedAt) \n            return(\n              <div className=\"container\" key={newsElem.title}>\n                {(newsElem.urlToImage)?<img src={newsElem.urlToImage} className=\"image\"></img>:<img className=\"image\"/>}\n                <div className=\"centered\">\n                <p className=\"text heading\">{newsElem.title}</p>\n                {(newsElem.author) && <p className=\"text author\">Written by <b>{newsElem.author}</b></p>}\n                <p className=\"text description\">{newsElem.description}</p>\n                {(newsElem.source.name) && <p className=\"text author\">Read more at <a href={newsElem.url} target=\"_blank\" rel=\"noreferrer\"><b>{newsElem.source.name}</b></a></p>}\n                </div>\n              </div>\n            );\n            })\n    return(\n      <div>\n      {(error)?(<div>{error}</div>):((data.length!==0 && data!==undefined)?(\n        <div>\n        {newsRenderer}\n        </div>):(<div>Loading</div>))}\n      </div>\n    );\n}\n\nexport default News;","import React ,{useState, useEffect} from 'react';\nimport './App.css';\nimport NewsCards from './components/NewsCards';\n\nexport default function App() {\n  const [news, setNews]=useState([]);\n  const [businessnews, setbusinessNews]=useState([]);\n  const [entertainmentnews, setentertainmentNews]=useState([]);\n  const [healthnews, sethealthNews]=useState([]);\n  const [sciencenews, setscienceNews]=useState([]);\n  const [sportsnews, setsportsNews]=useState([]);\n  const [technologynews, settechnologyNews]=useState([]);\n  const [error,setError]=useState('');\n  var url;\n  function callNewsAPI(){\n        fetch(\"/news\")\n        .then(res => res.json())\n        .then(res => {\n          if(res.status==='ok')\n        {\n          setNews(res.articles)\n        }\n        else\n        {\n          setError(res.message)\n        }\n        });\n  }\n  useEffect(()=>{\n    callNewsAPI();\n  },[]);\n\n  return (\n  <div>\n  <h2>News</h2>\n  <NewsCards data={news} error={error}/>\n  </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}